{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sqlServerName" : {
            "type": "string"
        },
        "deployLocation": {
            "type": "string"
        },
        "managedIdentity": {
            "type": "string"
        },
        "sqlAdminSID": {
            "type": "string"
        },
        "secretValue": {
            "type": "securestring"
        }
    },
    "variables":{
        "subscriptionId": "[subscription().subscriptionId]",
        "resourceGroupName": "[resourceGroup().name]",
        "keyVaultName": "[format('kv{0}', uniqueString(resourceGroup().id))]",
        "keyVaultRoleIdMapping": {
            "Key Vault Administrator": "00482a5a-887f-4fb3-b363-3b7fe8e74483",
            "Key Vault Certificates Officer": "a4417e6f-fecd-4de8-b567-7b0420556985",
            "Key Vault Crypto Officer": "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
            "Key Vault Crypto Service Encryption User": "e147488a-f6f5-4113-8e2d-b22465e65bf6",
            "Key Vault Crypto User": "12338af0-0e69-4776-bea7-57ae8d297424",
            "Key Vault Reader": "21090545-7ca7-4776-b22c-e363652d74d2",
            "Key Vault Secrets Officer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
            "Key Vault Secrets User": "4633458b-17de-408a-b874-0445c86b69e6"
        },
        "storageRoleMapping":{
            "Storage Blob Data Contributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
        }
    },
    "resources":[
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[parameters('managedIdentity')]",
            "apiVersion": "2018-11-30",
            "tags": {
                "event": "Make Stuff Go",
                "version": "initial"
            },
            "location": "[parameters('deployLocation')]"
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2022-05-01-preview",
            "name": "[parameters('sqlServerName')]",
            "location": "[parameters('deployLocation')]",
            "tags": {
                "event": "Make Stuff Go",
                "version": "initial"
            },
            "dependsOn":[
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentity'))]"
            ],
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('managedIdentity'))]" :{}
                }
            },
            "properties": {
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "administrators": {
                    "administratorType": "ActiveDirectory",
                    "azureADOnlyAuthentication": true,
                    "login": "SQLAdmins",
                    "principalType": "Group",
                    "sid": "[parameters('sqlAdminSID')]",
                    "tenantId": "[subscription().tenantId]"
                },
                "primaryUserAssignedIdentityId": "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('managedIdentity'))]"
            },
            "resources":[
                {
                    "apiVersion": "2021-02-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
                    ],
                    "location": "[parameters('deployLocation')]",
                    "tags": {
                        "event": "Make Stuff Go",
                        "version": "initial"
                    },
                    "name": "AdventureWorksLT",
                    "type": "databases",
                    "sku": {
                        "name": "Basic",
                        "tier": "Basic"
                    },
                    "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "sampleName": "AdventureWorksLT",
                        "zoneRedundant": false
                    }
                },
                {
                    "apiVersion": "2021-11-01",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
                    ],
                    "location": "[parameters('deployLocation')]",
                    "tags": {
                        "event": "Make Stuff Go",
                        "version": "initial"
                    },
                    "name": "AllowAllAzureIps",
                    "type": "firewallRules",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "name": "[variables('keyVaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-07-01",
            "location": "[parameters('deployLocation')]",
            "tags": {
                "event": "Make Stuff Go",
                "version": "initial"
            },
            "properties": {
                "enableRbacAuthorization": true,
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                },
                "enableSoftDelete": false
            },
            "resources": [
                {
                    "type": "secrets",
                    "name": "TestSecret",
                    "apiVersion": "2021-04-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                    ],
                    "properties": {
                        "value": "[parameters('secretValue')]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
            "name": "[guid(variables('keyVaultRoleIdMapping')['Key Vault Administrator'], parameters('managedIdentity'), resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')))]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefintitions', variables('keyVaultRoleIdMapping')['Key Vault Administrator'])]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentity')),'2018-11-30','Full').properties.principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "copy": {
                "name": "storageCopy",
                "count": 2
            },
            "apiVersion": "2022-05-01",
            "name": "[format('{0}storage{1}', copyIndex(), uniqueString(resourceGroup().id, parameters('sqlServerName')))]",
            "location": "[parameters('deployLocation')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow"
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                    "apiVersion": "2020-03-01-preview",
                    "name": "[concat(format('{0}storage{1}', copyIndex(), uniqueString(resourceGroup().id, parameters('sqlServerName'))), '/Microsoft.Authorization/', guid(resourceId('Microsoft.Storage/storageAccounts', format('{0}storage{1}', copyIndex(), uniqueString(resourceGroup().id, parameters('sqlServerName')))), variables('storageRoleMapping')['Storage Blob Data Contributor'], resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentity'))))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentity'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts',format('{0}storage{1}', copyIndex(), uniqueString(resourceGroup().id, parameters('sqlServerName'))))]"
                    ],
                    "properties": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefintitions', variables('storageRoleMapping')['Storage Blob Data Contributor'])]",
                        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentity')),'2018-11-30','Full').properties.principalId]",
                        "scope": "[resourceId('Microsoft.Storage/storageAccounts', format('{0}storage{1}', copyIndex(), uniqueString(resourceGroup().id, parameters('sqlServerName'))))]",
                        "principalType": "ServicePrincipal"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2022-02-01-preview",
            "name": "[concat(parameters('sqlServerName'), '/DefaultAuditingSettings')]",
            "properties": {
                "storageEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('{0}storage{1}', 0, uniqueString(resourceGroup().id, parameters('sqlServerName')))), '2019-06-01').PrimaryEndpoints.Blob]",
                "isDevopsAuditEnabled": false,
                "isManagedIdentityInUse": true,
                "retentionDays": 1,
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('{0}storage{1}', 0, uniqueString(resourceGroup().id, parameters('sqlServerName'))))]"
            ]

        },
        {
            "type": "Microsoft.Insights/diagnosticSettings",
            "apiVersion": "2021-05-01-preview",
            "scope": "[format('Microsoft.Sql/servers/{0}/databases/{1}', parameters('sqlServerName'), 'AdventureWorksLT')]",
            "name": "AllMetrics",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), 'AdventureWorksLT')]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('{0}storage{1}', 1, uniqueString(resourceGroup().id, parameters('sqlServerName'))))]"
            ],
            "properties": {
                "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', format('{0}storage{1}', 1, uniqueString(resourceGroup().id, parameters('sqlServerName'))))]",
                "logs": [
                    {
                        "category": "SQLInsights",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        }
                    },
                    {
                        "category": "AutomaticTuning",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        }
                    },
                    {
                        "category": "QueryStoreRuntimeStatistics",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        }
                    },
                    {
                        "category": "QueryStoreWaitStatistics",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        }
                    },
                    {
                        "category": "Errors",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        }
                    },
                    {
                        "category": "DatabaseWaitStatistics",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        }
                    },
                    {
                        "category": "Timeouts",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        }
                    },
                    {
                        "category": "Blocks",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        }
                    },
                    {
                        "category": "Deadlocks",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        }
                    }
                    ],
                    "metrics": [
                    {
                        "category": "Basic",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        },
                        "timeGrain": "PT1M"
                    },
                    {
                        "category": "InstanceAndAppAdvanced",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        },
                        "timeGrain": "PT1M"
                    },
                    {
                        "category": "WorkloadManagement",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 1,
                            "enabled": true
                        },
                        "timeGrain": "PT1M"
                    }
                ]
            }
        }
    ],
    "outputs": {
        "storageEndpoint": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('{0}storage{1}', 0, uniqueString(resourceGroup().id, parameters('sqlServerName')))), '2019-06-01').PrimaryEndpoints.Blob]"
        },
        "auditStorageName":{
            "type": "string",
            "value": "[format('{0}storage{1}', 0, uniqueString(resourceGroup().id, parameters('sqlServerName')))]"
        }
    }
}